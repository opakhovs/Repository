@model Repository.Viewmodels.ArtifactsViewModels.CreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Artifact</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.DateOfAdding, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateOfAdding, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateOfAdding, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => Model.ArtifactTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(x => x.ArtifactTypeId,  Model.Types.Select(x => new SelectListItem{ Text = x.Name, Value = x.Id.ToString()}),
                        htmlAttributes: new { @class = "form-control", id = "ArtifactType" })
            @Html.ValidationMessageFor(x => x.ArtifactTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.RatingIds, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(x => x.RatingIds, Model.Ratings.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString()}),
                                           htmlAttributes: new { @class = "form-control", id = "Ratings", @multiple = true })
            @Html.ValidationMessageFor(x => x.RatingIds, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(x => x.TagIds, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(x => x.TagIds, Model.Tags.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString()}),
                                            htmlAttributes: new { @class = "form-control", id = "Tags", @multiple = true })
            @Html.ValidationMessageFor(x => x.TagIds, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.ProjectIds, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(x => x.ProjectIds, Model.Projects.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString()}),
                                            htmlAttributes: new { @class = "form-control", id = "Projects", @multiple = true })
            @Html.ValidationMessageFor(x => x.ProjectIds, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.DomainIds, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(x => x.DomainIds, Model.Domains.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString()}),
                                              htmlAttributes: new { @class = "form-control", id = "Domains", @multiple = true })
            @Html.ValidationMessageFor(x => x.DomainIds, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(x => x.SubTaskIds, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(x => x.SubTaskIds, Model.SubTasks.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString() }),
                                              htmlAttributes: new { @class = "form-control", id = "SubTasks", @multiple = true })
            @Html.ValidationMessageFor(x => x.SubTaskIds, "", new { @class = "text-danger" })
        </div>
    </div>*@


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
